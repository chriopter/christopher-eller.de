# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo Site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths-ignore:
      - 'import/**'  # Ignore changes to import directory

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      full_rebuild:
        description: 'Force full rebuild (invalidate all caches)'
        required: false
        default: false
        type: boolean

  # Triggered by process-photos workflow
  repository_dispatch:
    types: [trigger-hugo-build]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_CACHEDIR: /tmp/hugo_cache
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 2  # Fetch HEAD and HEAD^ for proper diff
      
      - name: Read Hugo version
        id: hugo-version
        run: echo "HUGO_VERSION=$(cat .hugoversion)" >> $GITHUB_OUTPUT
      
      - name: Check if full rebuild needed
        id: check-rebuild
        run: |
          # Check if manually requested or repository_dispatch with full_rebuild
          if [[ "${{ github.event_name == 'workflow_dispatch' && github.event.inputs.full_rebuild }}" == "true" || \
                "${{ github.event_name == 'repository_dispatch' && github.event.client_payload.full_rebuild }}" == "true" ]]; then
            echo "FULL_REBUILD=true" >> $GITHUB_OUTPUT
            echo "Full rebuild requested"
          # Check if Hugo version changed
          elif git diff --name-only HEAD^ HEAD | grep -q ".hugoversion"; then
            echo "FULL_REBUILD=true" >> $GITHUB_OUTPUT
            echo "Hugo version changed - will perform full rebuild"
          else
            echo "FULL_REBUILD=false" >> $GITHUB_OUTPUT
            echo "Using cached build"
          fi
      
      # Single optimized cache step
      - uses: actions/cache@v4
        if: steps.check-rebuild.outputs.FULL_REBUILD != 'true'
        with:
          path: ${{ env.HUGO_CACHEDIR }}
          key: ${{ runner.os }}-hugo-${{ steps.hugo-version.outputs.HUGO_VERSION }}-${{ hashFiles('hugo.toml', 'content/**/*.md', 'layouts/**/*.html', '**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-hugo-${{ steps.hugo-version.outputs.HUGO_VERSION }}-
            ${{ runner.os }}-hugo-
      
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: ${{ steps.hugo-version.outputs.HUGO_VERSION }}
          extended: true
      
      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
        run: |
          hugo \
            --minify \
            --gc \
            --enableGitInfo \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
